@page "/keyedtest"
@page "/keyedtest/{echo}"

@attribute [ViewModelKey(nameof(TestKeyedNavigationViewModel))]
@inherits MvvmComponentBase<TestKeyedNavigationViewModel>

<h3>Test Keyed Navigation</h3>

@if (!string.IsNullOrWhiteSpace(ViewModel.Echo))
{
    <p aria-label="relative path">Relative Path: @ViewModel.Echo</p>
}

@if (!string.IsNullOrWhiteSpace(ViewModel.QueryString))
{
    <p aria-label="query string">QueryString: @ViewModel.QueryString</p>

    @if (!string.IsNullOrWhiteSpace(ViewModel.Test))
    {
        <p>Test = @ViewModel.Test</p>
    }
}

<button id="hex-translate" type="button" class="btn btn-primary"
        @onclick="ViewModel.HexTranslateNavigateCommand.Execute">
    Hex Translator
</button>

<button id="test" type="button" class="btn btn-secondary"
        @onclick="@(() => ViewModel.TestNavigateCommand.Execute(null))">
    Keyed Test
</button>

<button id="keyedtest-relative-path" type="button" class="btn btn-secondary"
        @onclick="@(() => ViewModel.TestNavigateCommand.Execute("this is a MvvmKeyNavLink test"))">
    Keyed with Relative Path
</button>

<button id="keyedtest-query-string" type="button" class="btn btn-secondary"
        @onclick="@(() => ViewModel.TestNavigateCommand.Execute("?test=this%20is%20a%20MvvmKeyNavLink%20querystring%20test"))">
    Keyed with QueryString
</button>

<button id="keyedtest-relpath-qstring" type="button" class="btn btn-secondary"
        @onclick="@(() => ViewModel.TestNavigateCommand.Execute("this is a MvvmKeyNavLink test/?test=this%20is%20a%20MvvmKeyNavLink%20querystring%20test"))">
    Keyed with Relative Path + QueryString
</button>

@code {
    // Required for relative path otherwise blazor will throw an error: System.InvalidOperationException
    // "Object of type 'Blazing.Mvvm.Sample.WebApp.Client.Pages.TestKeyedNavigation' does not have a property matching the name 'echo'."
    [Parameter]
    public string? Echo { get; set; }
}